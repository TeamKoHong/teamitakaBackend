require("dotenv").config();
const { Sequelize } = require("sequelize");

// üõ† DATABASE_URLÏù¥ ÎπÑÏñ¥ ÏûàÎäî Í≤ΩÏö∞ Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï
if (!process.env.DATABASE_URL) {
  console.error("‚ùå DATABASE_URL is not set! Using fallback local database...");
  process.env.DATABASE_URL = "mysql://root:password@127.0.0.1:3306/teamitaka_database";
}

// üõ† Sequelize Ïù∏Ïä§ÌÑ¥Ïä§ ÏÉùÏÑ± Ïãú ÏòàÏô∏Ï≤òÎ¶¨ Ï∂îÍ∞Ä
let sequelize;
try {
  sequelize = new Sequelize(process.env.DATABASE_URL, {
    dialectOptions: {
      ssl: {
        require: true,
        rejectUnauthorized: false,
      },
    },
    logging: false,
  });
  console.log("‚úÖ Successfully connected to the database.");
} catch (error) {
  console.error("‚ùå Failed to initialize Sequelize:", error);
  process.exit(1);
}

// üõ† Users ÌÖåÏù¥Î∏î Ï°¥Ïû¨ Ïó¨Î∂Ä ÌôïÏù∏
(async () => {
  try {
    const usersTableExists = await sequelize.getQueryInterface().showAllTables();
    if (usersTableExists.includes("Users")) {
      console.log("‚úÖ Users table exists. Proceeding...");
    } else {
      console.log("‚ö†Ô∏è Users table not found. Migration might be required.");
    }
    process.exit(0);
  } catch (error) {
    console.error("‚ùå Error checking Users table:", error);
    process.exit(1);
  }
})();
