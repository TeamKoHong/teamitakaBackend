name: CI Pipeline

on:
  push:
    branches:
      - dev
      - "feature/*"
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment variables
        run: echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud SDK
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        
      - name: Set compute region
        run: gcloud config set compute/region ${{ secrets.GCP_REGION }}

      - name: Securely Connect to Cloud SQL
        run: |
          set -o errexit -o nounset -o pipefail
          echo "::add-mask::${{ secrets.GCP_SA_KEY }}"  # Secrets ÎßàÏä§ÌÇπ
          echo "üîÑ Authenticating with Google Cloud..."
          gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }} || { echo "‚ùå GCloud authentication failed"; exit 1; }
          
          echo "üîç Checking Google Cloud SQL Instance..."
          echo "üîπ Cloud SQL Instance: ${GCP_CLOUDSQL_INSTANCE:0:5}****"
          
          echo "üîÑ Running Cloud SQL Connection Test..."
          if ! gcloud sql connect "${{ secrets.GCP_CLOUDSQL_INSTANCE }}" --user=root --quiet; then
            echo "‚ùå ERROR: Cloud SQL Connection Failed"
            exit 1
          fi

      - name: Run Sequelize migrations
        run: npx sequelize-cli db:migrate --env=production

      - name: Insert data from CSV
        run: node src/scripts/insertCSV.js

      - name: Deploy Application
        run: npm run start

env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_HOST: ${{ secrets.GCP_CLOUDSQL_PUBLIC_IP }}
  DB_DIALECT: "mysql"

  # ‚úÖ Google Cloud SQL Ï†ÑÏö© ÌôòÍ≤Ω Î≥ÄÏàò Ï∂îÍ∞Ä
  GCP_DB_USER: ${{ secrets.GCP_DB_USER }}
  GCP_DB_PASSWORD: ${{ secrets.GCP_DB_PASSWORD }}
  GCP_DB_NAME: ${{ secrets.GCP_DB_NAME }}
  GCP_DB_HOST: ${{ secrets.GCP_DB_HOST }}
  GCP_DB_PORT: "3306"
