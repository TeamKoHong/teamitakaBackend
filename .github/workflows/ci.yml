name: CI Pipeline

on:
  push:
    branches:
      - dev
      - "feature/*"
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: teamitaka_database
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h mysql --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # 1) 환경 변수 설정 (NODE_ENV=test)
      - name: Set environment variables
        run: echo "NODE_ENV=test" >> $GITHUB_ENV

      # 2) 소스 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 3) Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      # 4) 종속성 설치
      - name: Install dependencies
        run: npm ci

      # 5) 환경 변수 디버깅
      - name: Debug environment variables
        run: env | grep NODE_ENV

      # 6) MySQL 실행 대기
      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL to be ready..."
          until mysqladmin ping -h mysql --silent; do
            echo "Waiting for database connection..."
            sleep 2
          done
          echo "MySQL is ready!"

      # 7) MySQL 컨테이너 로그 출력
      - name: Debug MySQL container
        run: docker logs $(docker ps -q --filter ancestor=mysql:8.0)

      # 8) DB 마이그레이션 실행
      - name: Run Sequelize migrations
        run: npx sequelize-cli db:migrate --env=test

      # 9) CSV 데이터 삽입
      - name: Insert data from CSV
        run: node src/scripts/insertCSV.js
