name: CI Pipeline

on:
  push:
    branches:
      - dev
      - "feature/*"
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Set Production Environment
        run: |
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "Determined NODE_ENV: ${{ env.NODE_ENV }}"

      - name: Debug - Print Environment
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          echo "DB_HOST=${{ secrets.DB_HOST }}"
          echo "DB_USER=${{ secrets.DB_USER }}"
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
          echo "DB_NAME=${{ secrets.DB_NAME }}"
          echo "DB_PORT=${{ secrets.DB_PORT }}"
          echo "RAW_DATABASE_URL=${{ secrets.DATABASE_URL }}"
          echo "DECODED_URL=$(echo ${{ secrets.DATABASE_URL }} | base64 -d 2>/dev/null || echo ${{ secrets.DATABASE_URL }})"
          echo "URL_ENCODED=$(echo -n "${{ secrets.DATABASE_URL }}" | xxd -p)"
          echo "URL_DECODED=$(echo -n "${{ secrets.DATABASE_URL }}" | perl -pe 's/%([0-9a-fA-F]{2})/chr(hex($1))/ge')"
          echo "URL_TEST=$(echo -n "${{ secrets.DATABASE_URL }}" | sed 's/%23/\#/g; s/%2D/-/g; s/%5F/_/g; s/%2E/./g; s/%7E/~/g')"

      - name: Test Cloud SQL Connection
        run: |
          echo "Testing connection to Cloud SQL at 35.223.147.232:3306..."
          nc -zv 35.223.147.232 3306 || {
            echo "‚ö†Ô∏è Failed to connect to Cloud SQL at 35.223.147.232:3306"
            echo "Check GCP Firewall and instance status for IP 172.200.199.211"
            exit 1
          }
          echo "‚úÖ Connection to Cloud SQL successful"

      - name: Check if Users table exists
        run: node src/scripts/checkDB.js
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run Sequelize migrations
        run: |
          echo "Running migration with DATABASE_URL: ${{ secrets.DATABASE_URL }}"
          npx sequelize-cli db:migrate --url "${{ secrets.DATABASE_URL }}"
        env:
          NODE_ENV: production

      - name: Insert data from CSV
        run: |
          echo "üîç Inserting data into DB from CSV..."
          node src/scripts/insertCSV.js
          echo "‚úÖ CSV Insert Completed"
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy Application
        run: |
          echo "üöÄ Starting Application..."
          npm run start
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  PORT: ${{ secrets.DB_PORT }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DB_CHARSET: "utf8mb4"
  DB_DIALECT: "mysql"