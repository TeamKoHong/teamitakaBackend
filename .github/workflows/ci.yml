name: CI Pipeline

on:
  push:
    branches:
      - dev
      - "feature/*"
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Set Production Environment
        run: |
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "Determined NODE_ENV: ${{ env.NODE_ENV }}"

      - name: Debug - Print Environment
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          echo "DB_HOST=${{ secrets.DB_HOST }}"
          echo "DB_USER=${{ secrets.DB_USER }}"
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
          echo "DB_NAME=${{ secrets.DB_NAME }}"
          echo "DB_PORT=${{ secrets.DB_PORT }}"

      - name: Start Cloud SQL Proxy
        run: |
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
          # INSTANCE_CONNECTION_NAMEÏùÄ Cloud SQL Ïù∏Ïä§ÌÑ¥Ïä§ Ïó∞Í≤∞ Ïù¥Î¶ÑÏúºÎ°ú ÎåÄÏ≤¥
          ./cloud_sql_proxy -instances=${{ secrets.INSTANCE_CONNECTION_NAME }}=tcp:3306 &
          sleep 5  # ProxyÍ∞Ä ÏôÑÏ†ÑÌûà Ïã§ÌñâÎê† ÎïåÍπåÏßÄ ÎåÄÍ∏∞

      - name: Test Cloud SQL Connection
        run: |
          echo "Testing connection to Cloud SQL at 35.223.147.232:3306..."
          nc -zv 35.223.147.232 3306 || {
            echo "‚ö†Ô∏è Failed to connect to Cloud SQL at 35.223.147.232:3306"
            exit 1
          }
          echo "‚úÖ Connection to Cloud SQL successful"

      - name: Check if Users table exists
        run: node src/scripts/checkDB.js
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run Sequelize migrations (Users first)
        run: |
          # Override the DB_HOST to use Cloud SQL Proxy (localhost)
          export DB_HOST=127.0.0.1
          npx sequelize-cli db:migrate --name 20250219140000-create-users.js --env production
          npx sequelize-cli db:migrate --name 20250219140810-create-applications.js --env production
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}

      - name: Insert data from CSV
        run: |
          echo "üîç Inserting data into DB from CSV..."
          node src/scripts/insertCSV.js
          echo "‚úÖ CSV Insert Completed"
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy Application
        run: |
          echo "üöÄ Starting Application..."
          npm run start
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  PORT: ${{ secrets.DB_PORT }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DB_CHARSET: "utf8mb4"
  DB_DIALECT: "mysql"